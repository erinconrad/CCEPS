%% locations

locations = cceps_files;
data_folder = locations.data_folder;
results_folder = locations.results_folder;
out_folder = [results_folder,'new_pipeline/'];

pwfile = locations.pwfile;
login_name = locations.loginname;
script_folder = locations.script_folder;
results_folder = locations.results_folder;

% add paths
addpath(genpath(script_folder));

%% Define left and right temporal elecs
letters = {'LA', 'LB', 'LC'};
numRange = 1:12;

% Initialize the cell array
left = cell(length(letters), length(numRange));

% Populate the cell array
for i = 1:length(letters)
    for j = 1:length(numRange)
        left{i, j} = [letters{i}, num2str(numRange(j))];
    end
end

letters = {'RA', 'RB', 'RC'};
numRange = 1:12;

% Initialize the cell array
right = cell(length(letters), length(numRange));

% Populate the cell array
for i = 1:length(letters)
    for j = 1:length(numRange)
        right{i, j} = [letters{i}, num2str(numRange(j))];
    end
end

%% Initialize table
variableNames = {'name', 'all_elec_names','stim_chs','lt_stim_elecs', 'rt_stim_elecs','N1','N2'};
T = table('Size', [0, length(variableNames)], 'VariableNames', variableNames);

%% Load patients and pull in info
listing = dir([out_folder,'*.mat']);
for l = 1:length(listing)
    fname = [out_folder,listing(l).name];

    % Load the file
    out = load(fname);
    out = out.pt_out;

    % get the info
    name = out.name;
    labels = out.chLabels;
    stim_chs = out.stim_chs;

    N1 = out.network(1).A;
    N2 = out.network(2).A;


    % find the temporal ones
    % Flatten the 'cellArray'
    flatLeft = reshape(left', 1, []);  % Transpose before reshaping to maintain order by rows
    
    % Find matching elements
    [isMatch, loc] = ismember(labels, flatLeft);
    
    % Extract matching elements
    lt_elecs = labels(isMatch);
    r

    flatRight = reshape(right', 1, []);  % Transpose before reshaping to maintain order by rows
    
    % Find matching elements
    [isMatch, loc] = ismember(labels, flatRight);
    
    % Extract matching elements
    rt_elecs = labels(isMatch);

    % Populate array
    T = [T;name,]

end