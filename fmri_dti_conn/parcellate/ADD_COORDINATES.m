function out = ADD_COORDINATES(out,coords)

% INPUTS:
% out: CCEPs output struct
% coords: coordinates structure generated by elec_info/get_all_mni_locs.m
% and elec_info/return_mni.m
%
% OUTPUTS:
% out: CCEPs output struct with the following changes:
% - electrode coordinates added and reordered to match electrodes
% - electrodes missing coordinates or data removed

%% select correct coordinates file for given patient, including if they have >1 implant
subj = strsplit(out.name,'_'); % get HUP ID
subj_idx = find(ismember({coords.info.name},subj{1}));
implant_idx = 1; 
if length(coords.info(subj_idx).elecs) > 1
    % take most recent implant  **** need better rule for this, probably
    % case by case
    %implant_idx = find(contains({coords.info(subj_idx).elecs.folder_name},'postrevision')); 
    implant_idx = 2;
end
coords_subj = coords.info(subj_idx).elecs(implant_idx);

%% reconcile coordinates between coordinate file and e-phys data

chLabels_coords = coords_subj.elec_names;
chLabels = out.chLabels;
chs_with_coords = intersect(chLabels,chLabels_coords); % get names of channels with both coordinates AND EEG data

keep_chs = get_chs_to_ignore(chLabels); % delete channels based on Erin's convention
keep_chs_coords = get_chs_to_ignore(chLabels_coords); % delete channels based on Erin's convention
% remove any channels that don't have coordinates, or any coordinates for channels not in data
keep_chs(~ismember(chLabels,chs_with_coords)) =  false;
keep_chs_coords(~ismember(chLabels_coords,chs_with_coords)) =  false;

% select only electrodes with both coordinates and e-phys data
out = MASK_REORDER_ELECTRODES(out,keep_chs);
coords_subj = MASK_REORDER_ELECTRODES(coords_subj,keep_chs_coords);

% reorder electrodes and coordinates so coordinates and e-phys data channels are paired
% correctly
[~,sort_chLabels,sort_chLabels_coords] = intersect(chLabels(keep_chs),chLabels_coords(keep_chs_coords),'stable');
out = MASK_REORDER_ELECTRODES(out,sort_chLabels); % technically, this shouldn't do anything as long as 'stable' is set in the line above but leaving it in just in case
coords_subj = MASK_REORDER_ELECTRODES(coords_subj,sort_chLabels_coords);

if ~isequal(out.chLabels,coords_subj.elec_names)
    error('ERROR: electrodes and coordinates not aligned correctly.')  
end
out.locs_monopolar = coords_subj.locs;